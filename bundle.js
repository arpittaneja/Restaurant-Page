(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),s=t.n(A),l=new URL(t(302),t.b),c=i()(r());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald&family=Unbounded&display=swap);"]);var p=s()(l);c.push([n.id,"* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    color: white;\n    font-family: 'Oswald', sans-serif;\n}\n\nhtml,\nbody {\n    height: 100vh;\n}\n\n#content {\n    background: url("+p+");\n    background-size: 100vw 140vh;\n}\n\n.upper-content {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: 12vh 1fr;\n}\n\n.tab-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    opacity: 0.6;\n    position: sticky;\n    top: 0;\n}\n\n.tab {\n    flex: 1 1 0;\n    text-align: center;\n    cursor: pointer;\n    font-size: 1.5rem;\n    color: grey;\n    font-family: 'Oswald', sans-serif;\n    transition: all 0.3s;\n}\n\n.tab:hover,\n.selected {\n    transform: scale(1.2);\n    color: white;\n    opacity: 1;\n}\n\n.home-content {\n    text-align: center;\n    font-size: 2rem;\n    grid-area: 2/1/2/2;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    gap: clamp(50px, 10vh, 150px);\n}\n\n.home-head {\n    font-size: 4rem;\n    font-family: 'Unbounded', cursive;\n}\n\n.home-sub-head {\n    font-family: 'Unbounded', cursive;\n}\n\n.menu-content {\n    text-align: center;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    gap: 40px;\n    padding: 50px min(15vw, 250px);\n}\n\n[class^='menu-item-'] {\n    width: clamp(300px, 40%, 350px);\n    display: flex;\n    flex-flow: column-reverse nowrap;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    font-size: 1.2rem;\n}\n\n.menu-content img {\n    border-radius: 15px;\n    aspect-ratio: 1 / 1;\n    width: 100%;\n    object-fit: cover;\n    transition: all 0.3s;\n    cursor: pointer;\n}\n\n.menu-content img:hover {\n    transform: scale(1.06);\n}\n\n.contact-content {\n    text-align: center;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-around;\n    align-items: center;\n    font-size: 1.5rem;\n}\n\n.contact-content img {\n    width: min(60%, 550px);\n    height: auto;\n    border-radius: 20px;\n}\n\n.order {\n    text-align: center;\n    padding-block: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5vw;\n    font-size: 1.2em;\n    color: black;\n    background-color: #fff;\n}\n\n.order img {\n    transition: all 0.3s;\n    cursor: pointer;\n}\n\n.order img:hover {\n    transform: scale(1.1);\n}\n\nfooter {\n    font-size: 1.2rem;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n}\n\n.github-logo-container>img {\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.github-logo-container:hover>img {\n    transform: rotate(360deg) scale(1.1);\n    transition: all 0.3s ease-in-out;\n}\n\n.heart {\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.heart:hover {\n    color: rgb(252, 80, 80);\n}\n\nfooter a {\n    text-decoration: none;\n    transition: all 0.4s ease-in-out;\n}\n\nfooter a:visited {\n    color: white;\n}\n\nfooter div:nth-child(3) {\n    font-size: 1rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,iCAAiC;AACrC;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,mDAA2B;IAC3B,4BAA4B;AAChC;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,MAAM;AACV;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,iCAAiC;IACjC,oBAAoB;AACxB;;AAEA;;IAEI,qBAAqB;IACrB,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,wBAAwB;IACxB,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,iCAAiC;AACrC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,SAAS;IACT,8BAA8B;AAClC;;AAEA;IACI,+BAA+B;IAC/B,aAAa;IACb,gCAAgC;IAChC,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,WAAW;IACX,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,wBAAwB;IACxB,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;IACR,gBAAgB;IAChB,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,oCAAoC;IACpC,gCAAgC;AACpC;;AAEA;IACI,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Oswald&family=Unbounded&display=swap');\n\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    color: white;\n    font-family: 'Oswald', sans-serif;\n}\n\nhtml,\nbody {\n    height: 100vh;\n}\n\n#content {\n    background: url(\"./bg.jpg\");\n    background-size: 100vw 140vh;\n}\n\n.upper-content {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: 12vh 1fr;\n}\n\n.tab-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    opacity: 0.6;\n    position: sticky;\n    top: 0;\n}\n\n.tab {\n    flex: 1 1 0;\n    text-align: center;\n    cursor: pointer;\n    font-size: 1.5rem;\n    color: grey;\n    font-family: 'Oswald', sans-serif;\n    transition: all 0.3s;\n}\n\n.tab:hover,\n.selected {\n    transform: scale(1.2);\n    color: white;\n    opacity: 1;\n}\n\n.home-content {\n    text-align: center;\n    font-size: 2rem;\n    grid-area: 2/1/2/2;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    gap: clamp(50px, 10vh, 150px);\n}\n\n.home-head {\n    font-size: 4rem;\n    font-family: 'Unbounded', cursive;\n}\n\n.home-sub-head {\n    font-family: 'Unbounded', cursive;\n}\n\n.menu-content {\n    text-align: center;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    gap: 40px;\n    padding: 50px min(15vw, 250px);\n}\n\n[class^='menu-item-'] {\n    width: clamp(300px, 40%, 350px);\n    display: flex;\n    flex-flow: column-reverse nowrap;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    font-size: 1.2rem;\n}\n\n.menu-content img {\n    border-radius: 15px;\n    aspect-ratio: 1 / 1;\n    width: 100%;\n    object-fit: cover;\n    transition: all 0.3s;\n    cursor: pointer;\n}\n\n.menu-content img:hover {\n    transform: scale(1.06);\n}\n\n.contact-content {\n    text-align: center;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-around;\n    align-items: center;\n    font-size: 1.5rem;\n}\n\n.contact-content img {\n    width: min(60%, 550px);\n    height: auto;\n    border-radius: 20px;\n}\n\n.order {\n    text-align: center;\n    padding-block: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5vw;\n    font-size: 1.2em;\n    color: black;\n    background-color: #fff;\n}\n\n.order img {\n    transition: all 0.3s;\n    cursor: pointer;\n}\n\n.order img:hover {\n    transform: scale(1.1);\n}\n\nfooter {\n    font-size: 1.2rem;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n}\n\n.github-logo-container>img {\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.github-logo-container:hover>img {\n    transform: rotate(360deg) scale(1.1);\n    transition: all 0.3s ease-in-out;\n}\n\n.heart {\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.heart:hover {\n    color: rgb(252, 80, 80);\n}\n\nfooter a {\n    text-decoration: none;\n    transition: all 0.4s ease-in-out;\n}\n\nfooter a:visited {\n    color: white;\n}\n\nfooter div:nth-child(3) {\n    font-size: 1rem;\n}"],sourceRoot:""}]);const d=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],l=o.base?s[0]+o.base:s[0],c=a[l]||0,p="".concat(l," ").concat(c);a[l]=c+1;var d=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=o(n,r),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},302:(n,e,t)=>{n.exports=t.p+"ed345c082fceffcef12c.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),s=t.n(A),l=t(216),c=t.n(l),p=t(589),d=t.n(p),u=t(426),f={};f.styleTagTransform=d(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=c(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const m=function(n,e,t,o){const r=document.createElement(n);return e&&e.forEach((n=>{r.classList.add(n)})),t&&Object.keys(t).forEach((n=>{r.setAttribute(n,t[n])})),o&&(r.textContent=o),r},C=function(){const n=m("div",["home-head"],null,"The Wednesday Café"),e=m("div",["home-sub-head"],null,"Where The Darkness Brews"),t=m("div",["home-content"],null,null);return t.append(n,e),t},g=t.p+"bb620837c52be28175b3.jpeg",h=t.p+"e4dc68cc9afcf44798db.jpg",B=t.p+"f2fda17716dc55d9a406.jpg",I=t.p+"b1fc11fda638eaba4552.jpg",v=t.p+"3f6a8904f923e583b893.png",b=t.p+"76c251b9dd291d8c1256.svg",y=t.p+"99eb735aba060ff68e38.png",x=t.p+"d3d70d7557463c80ebfe.png",w=m("div",["order"],null,"Order Online"),E=new Image;E.src=y;const j=new Image;j.src=x,w.append(E,j),E.style.height="90px",j.style.height="90px";const k=function(){const n=m("footer",["footer"],null,null),e=new Image;e.src=b;const t=m("a",["github-logo-container"],{href:"https://github.com/arpittaneja/Restaurant-Page",target:"_blank"},null);e.style.height="35px",e.style.width="35px",t.append(e);const o=m("div",null,null,null),r=m("div",null,null,"The Wednesday Café © 2022 | All Rights Reserved"),a=m("span",["heart"],null,"♥"),i=m("a",null,{href:"https://github.com/arpittaneja",target:"_blank"},"Arpit Taneja");return o.append("Made with ",a," by ",i),n.append(t,o,r),n}(),S=m("div",["upper-content"],null,null),T=m("div",["lower-content"],null,null);S.append(function(){const n=m("div",["tab-container"],null,null),e=m("div",["tab","selected"],null,"HOME"),t=m("div",["tab","unselected"],null,"MENU"),o=m("div",["tab","unselected"],null,"CONTACT");return n.append(e,t,o),n}(),C()),T.append(w,k),document.querySelector("#content").append(S,T);const z=Array.from(document.querySelectorAll(".tab"));z.forEach((n=>{n.addEventListener("click",(n=>{Array.from(n.target.classList).includes("unselected")&&(S.removeChild(S.lastChild),"HOME"===n.target.textContent?(S.append(C()),T.insertBefore(w,k)):"MENU"===n.target.textContent?(S.append(function(){const n=new Image,e=new Image,t=new Image,o=new Image;n.src=g;const r=m("div",["menu-content"],null,null),a=m("div",["menu-item-1"],null,"Zombie Brain Jello Shots");a.append(n);const i=m("div",["menu-item-2"],null,"Monster Mashed Potatoes");e.src=h,i.append(e);const A=m("div",["menu-item-3"],null,"Eyeball Cookies");t.src=B,A.append(t);const s=m("div",["menu-item-4"],null,"Death Shake");return o.src=I,s.append(o),r.append(a,i,A,s),r}()),2===T.children.length&&T.removeChild(T.firstChild)):(S.append(function(){const n=new Image;n.src=v;const e=m("div",["contact-container"],null,"CONTACT US"),t=m("div",["contact-body"],null,null),o=m("span",null,null,"thewednesdaycafe@gmail.com"),r=m("span",null,null,"+91 9876543210");t.append(o,r),e.append(t);const a=m("div",["address"],null,"ADDRESS"),i=m("div",["address-body"],null,"6th Avenue, Calgary, AB, Canada");a.append(i);const A=m("div",["contact-content"],null,null);return A.append(a,n,e),A}()),2===T.children.length&&T.removeChild(T.firstChild)),n.target.classList.add("selected"),n.target.classList.remove("unselected"),z.forEach((e=>{n.target!==e&&(e.classList.remove("selected"),e.classList.add("unselected"))})))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,