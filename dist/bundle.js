(()=>{"use strict";var n={982:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),l=t.n(A),s=new URL(t(7),t.b),c=i()(r());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald&family=Unbounded&display=swap);"]);var d=l()(s);c.push([n.id,"* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    color: white;\n    font-family: 'Oswald', sans-serif;\n}\n\n::selection {\n    color: black;\n    background: white;\n}\n\nhtml,\nbody {\n    height: 100vh;\n}\n\n#content {\n    background: url("+d+");\n    background-size: 100vw 145vh;\n    /* background-size: cover; */\n}\n\n.upper-content {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: 12vh 1fr;\n}\n\n.tab-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    opacity: 0.8;\n    position: sticky;\n    top: 0;\n    overflow: hidden;\n}\n\n.tab {\n    flex: 1 1 0;\n    text-align: center;\n    cursor: pointer;\n    font-size: 1.5rem;\n    color: grey;\n    font-family: 'Oswald', sans-serif;\n    transition: all 0.3s;\n}\n\n.tab:hover,\n.selected {\n    transform: scale(1.2);\n    color: white;\n    opacity: 1;\n}\n\n.home-content {\n    text-align: center;\n    font-size: 2rem;\n    grid-area: 2/1/2/2;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    gap: clamp(50px, 10vh, 150px);\n}\n\n.home-head {\n    font-size: clamp(1.5rem, 10vw, 4rem);\n    font-family: 'Unbounded', cursive;\n}\n\n.home-sub-head {\n    font-family: 'Unbounded', cursive;\n}\n\n.menu-content {\n    text-align: center;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    gap: 40px;\n    padding: 50px min(15vw, 250px);\n}\n\n[class^='menu-item-'] {\n    width: clamp(300px, 40%, 350px);\n    display: flex;\n    flex-flow: column-reverse nowrap;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    font-size: 1.35rem;\n    font-weight: bold;\n}\n\n.menu-content img {\n    border-radius: 15px;\n    aspect-ratio: 1 / 1;\n    width: 100%;\n    object-fit: cover;\n    transition: all 0.3s;\n    cursor: pointer;\n    border: 4px solid white;\n}\n\n.menu-content img:hover {\n    transform: scale(1.06);\n}\n\n.contact-content {\n    text-align: center;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-around;\n    align-items: center;\n    font-size: 1.7rem;\n}\n\n.contact-content img {\n    width: min(60%, 550px);\n    height: auto;\n    border-radius: 20px;\n    border: 4px solid white;\n    cursor: pointer;\n    transition: all 0.2s;\n}\n\n.contact-content img:hover {\n    transform: scale(1.06);\n}\n\n.contact-container div{\n    display: flex;\n    flex-flow: column wrap;\n}\n\n.order {\n    opacity: 0.8;\n    text-align: center;\n    padding-block: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5vw;\n    font-size: 1.2em;\n    color: black;\n    background-color: white;\n}\n\n.order::selection {\n    color: white;\n    background: black;\n}\n\n.order img {\n    transition: all 0.3s;\n    cursor: pointer;\n}\n\n.order img:hover {\n    transform: scale(1.1);\n}\n\nfooter {\n    font-size: 1.2rem;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n}\n\n.github-logo-container>img {\n    height: 35px;\n    width: auto;\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.github-logo-container:hover>img {\n    transform: rotate(360deg) scale(1.1);\n    transition: all 0.3s ease-in-out;\n}\n\n.heart {\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.heart:hover {\n    color: rgb(252, 80, 80);\n}\n\nfooter a {\n    text-decoration: none;\n    transition: all 0.4s ease-in-out;\n}\n\nfooter a:visited {\n    color: white;\n}\n\nfooter div:nth-child(3) {\n    font-size: 1rem;\n}","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAEA;IACI,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,iCAAiC;AACrC;;AAEA;IACI,YAAY;IACZ,iBAAiB;AACrB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,mDAAkC;IAClC,4BAA4B;IAC5B,4BAA4B;AAChC;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,MAAM;IACN,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,iCAAiC;IACjC,oBAAoB;AACxB;;AAEA;;IAEI,qBAAqB;IACrB,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,wBAAwB;IACxB,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,oCAAoC;IACpC,iCAAiC;AACrC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;IACT,8BAA8B;AAClC;;AAEA;IACI,+BAA+B;IAC/B,aAAa;IACb,gCAAgC;IAChC,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,WAAW;IACX,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,wBAAwB;IACxB,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;IACR,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,oCAAoC;IACpC,gCAAgC;AACpC;;AAEA;IACI,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Oswald&family=Unbounded&display=swap');\n\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    color: white;\n    font-family: 'Oswald', sans-serif;\n}\n\n::selection {\n    color: black;\n    background: white;\n}\n\nhtml,\nbody {\n    height: 100vh;\n}\n\n#content {\n    background: url(\"./../img/bg.jpg\");\n    background-size: 100vw 145vh;\n    /* background-size: cover; */\n}\n\n.upper-content {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: 12vh 1fr;\n}\n\n.tab-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    opacity: 0.8;\n    position: sticky;\n    top: 0;\n    overflow: hidden;\n}\n\n.tab {\n    flex: 1 1 0;\n    text-align: center;\n    cursor: pointer;\n    font-size: 1.5rem;\n    color: grey;\n    font-family: 'Oswald', sans-serif;\n    transition: all 0.3s;\n}\n\n.tab:hover,\n.selected {\n    transform: scale(1.2);\n    color: white;\n    opacity: 1;\n}\n\n.home-content {\n    text-align: center;\n    font-size: 2rem;\n    grid-area: 2/1/2/2;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    gap: clamp(50px, 10vh, 150px);\n}\n\n.home-head {\n    font-size: clamp(1.5rem, 10vw, 4rem);\n    font-family: 'Unbounded', cursive;\n}\n\n.home-sub-head {\n    font-family: 'Unbounded', cursive;\n}\n\n.menu-content {\n    text-align: center;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    gap: 40px;\n    padding: 50px min(15vw, 250px);\n}\n\n[class^='menu-item-'] {\n    width: clamp(300px, 40%, 350px);\n    display: flex;\n    flex-flow: column-reverse nowrap;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    font-size: 1.35rem;\n    font-weight: bold;\n}\n\n.menu-content img {\n    border-radius: 15px;\n    aspect-ratio: 1 / 1;\n    width: 100%;\n    object-fit: cover;\n    transition: all 0.3s;\n    cursor: pointer;\n    border: 4px solid white;\n}\n\n.menu-content img:hover {\n    transform: scale(1.06);\n}\n\n.contact-content {\n    text-align: center;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-around;\n    align-items: center;\n    font-size: 1.7rem;\n}\n\n.contact-content img {\n    width: min(60%, 550px);\n    height: auto;\n    border-radius: 20px;\n    border: 4px solid white;\n    cursor: pointer;\n    transition: all 0.2s;\n}\n\n.contact-content img:hover {\n    transform: scale(1.06);\n}\n\n.contact-container div{\n    display: flex;\n    flex-flow: column wrap;\n}\n\n.order {\n    opacity: 0.8;\n    text-align: center;\n    padding-block: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5vw;\n    font-size: 1.2em;\n    color: black;\n    background-color: white;\n}\n\n.order::selection {\n    color: white;\n    background: black;\n}\n\n.order img {\n    transition: all 0.3s;\n    cursor: pointer;\n}\n\n.order img:hover {\n    transform: scale(1.1);\n}\n\nfooter {\n    font-size: 1.2rem;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n}\n\n.github-logo-container>img {\n    height: 35px;\n    width: auto;\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.github-logo-container:hover>img {\n    transform: rotate(360deg) scale(1.1);\n    transition: all 0.3s ease-in-out;\n}\n\n.heart {\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n}\n\n.heart:hover {\n    color: rgb(252, 80, 80);\n}\n\nfooter a {\n    text-decoration: none;\n    transition: all 0.4s ease-in-out;\n}\n\nfooter a:visited {\n    color: white;\n}\n\nfooter div:nth-child(3) {\n    font-size: 1rem;\n}"],sourceRoot:""}]);const p=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(i[l]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var l=n[A],s=o.base?l[0]+o.base:l[0],c=a[s]||0,d="".concat(s," ").concat(c);a[s]=c+1;var p=t(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var l=o(n,r),s=0;s<a.length;s++){var c=t(a[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=l}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},7:(n,e,t)=>{n.exports=t.p+"2e555834268b1142694e.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),l=t.n(A),s=t(216),c=t.n(s),d=t(589),p=t.n(d),u=t(982),f={};f.styleTagTransform=p(),f.setAttributes=l(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=c(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const m=function(n,e,t,o){const r=document.createElement(n);return e&&e.forEach((n=>{r.classList.add(n)})),t&&Object.keys(t).forEach((n=>{r.setAttribute(n,t[n])})),o&&(r.textContent=o),r},C=function(){const n=m("div",["home-head"],null,"The Wednesday Café"),e=m("div",["home-sub-head"],null,"Where The Darkness Brews"),t=m("div",["home-content"],null,null);return t.append(n,e),t},g=t.p+"bb620837c52be28175b3.jpeg",h=t.p+"e4dc68cc9afcf44798db.jpg",B=t.p+"f2fda17716dc55d9a406.jpg",I=t.p+"b1fc11fda638eaba4552.jpg",v=t.p+"3f6a8904f923e583b893.png",b=t.p+"76c251b9dd291d8c1256.svg",w=t.p+"99eb735aba060ff68e38.png",x=t.p+"d3d70d7557463c80ebfe.png",y=function(){const n=m("div",["order"],null,"Order Online"),e=new Image;e.src=w;const t=new Image;return t.src=x,n.append(e,t),e.style.height="90px",t.style.height="90px",n}(),E=function(){const n=m("footer",null,null,null),e=new Image;e.src=b;const t=m("a",["github-logo-container"],{href:"https://github.com/arpittaneja/Restaurant-Page",target:"_blank"},null);t.append(e);const o=m("div",null,null,null),r=m("div",null,null,"The Wednesday Café © 2022 | All Rights Reserved"),a=m("span",["heart"],null,"♥"),i=m("a",null,{href:"https://github.com/arpittaneja",target:"_blank"},"Arpit Taneja");return o.append("Made with ",a," by ",i),n.append(t,o,r),n}(),k=m("div",["upper-content"],null,null),j=m("div",["lower-content"],null,null),S=document.querySelector("#content");k.append(function(){const n=m("div",["tab-container"],null,null),e=m("div",["tab","selected"],null,"HOME"),t=m("div",["tab","unselected"],null,"MENU"),o=m("div",["tab","unselected"],null,"CONTACT");return n.append(e,t,o),n}(),C()),j.append(y,E),S.append(k,j);const T=Array.from(document.querySelectorAll(".tab"));T.forEach((n=>{n.addEventListener("click",(n=>{Array.from(n.target.classList).includes("unselected")&&(k.removeChild(k.lastChild),"HOME"===n.target.textContent?(k.append(C()),j.insertBefore(y,E)):"MENU"===n.target.textContent?(k.append(function(){const n=new Image,e=new Image,t=new Image,o=new Image,r=m("div",["menu-content"],null,null),a=m("div",["menu-item-1"],null,"Zombie Brain Jello Shots");n.src=g,a.append(n);const i=m("div",["menu-item-2"],null,"Monster Mashed Potatoes");e.src=h,i.append(e);const A=m("div",["menu-item-3"],null,"Eyeball Cookies");t.src=B,A.append(t);const l=m("div",["menu-item-4"],null,"Death Shake");return o.src=I,l.append(o),r.append(a,i,A,l),r}()),2===j.children.length&&j.removeChild(j.firstChild)):(k.append(function(){const n=new Image;n.src=v;const e=m("div",["contact-container"],null,"CONTACT US"),t=m("div",["contact-body"],null,null),o=m("span",null,null,"thewednesdaycafe@gmail.com"),r=m("span",null,null,"+91 9876543210");t.append(o,r),e.append(t);const a=m("div",["address"],null,"ADDRESS"),i=m("div",["address-body"],null,"6th Avenue, Calgary, AB, Canada");a.append(i);const A=m("div",["contact-content"],null,null);return A.append(a,n,e),A}()),2===j.children.length&&j.removeChild(j.firstChild)),n.target.classList.add("selected"),n.target.classList.remove("unselected"),T.forEach((e=>{n.target!==e&&(e.classList.remove("selected"),e.classList.add("unselected"))})))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQWF1QixTQUFTbEwsUUFDeEIySixFQUFhckUsWUFBWXFFLEVBQWFqRSxjQUl4Q2dFLEVBQWFiLE9LcENyQixXQUNFLE1BQU1sSixFQUFNLElBQUlxSixNQUNoQnJKLEVBQUk2SCxJQUFNLEVBQ1YsTUFBTTJELEVBQWF6QyxFQUNqQixNQUNBLENBQUMscUJBQ0QsS0FDQSxjQUVJMEMsRUFBYzFDLEVBQWtCLE1BQU8sQ0FBQyxnQkFBaUIsS0FBTSxNQUMvRDJDLEVBQVkzQyxFQUNoQixPQUNBLEtBQ0EsS0FDQSw4QkFFSTRDLEVBQWE1QyxFQUFrQixPQUFRLEtBQU0sS0FBTSxrQkFFekQwQyxFQUFZdkMsT0FBT3dDLEVBQVdDLEdBQzlCSCxFQUFXdEMsT0FBT3VDLEdBQ2xCLE1BQU1HLEVBQWE3QyxFQUFrQixNQUFPLENBQUMsV0FBWSxLQUFNLFdBQ3pEOEMsRUFBYzlDLEVBQ2xCLE1BQ0EsQ0FBQyxnQkFDRCxLQUNBLG1DQUVGNkMsRUFBVzFDLE9BQU8yQyxHQUNsQixNQUFNQyxFQUFpQi9DLEVBQ3JCLE1BQ0EsQ0FBQyxtQkFDRCxLQUNBLE1BR0YsT0FEQStDLEVBQWU1QyxPQUFPMEMsRUFBWTVMLEVBQUt3TCxHQUNoQ00sQ0FDVCxDTEE0QixJQUVpQixJQUFqQzlCLEVBQWF1QixTQUFTbEwsUUFDeEIySixFQUFhckUsWUFBWXFFLEVBQWFqRSxhQUcxQ25CLEVBQUVSLE9BQU9tRSxVQUFVSSxJQUFJLFlBQ3ZCL0QsRUFBRVIsT0FBT21FLFVBQVU3RSxPQUFPLGNBRTFCMkcsRUFBSzVCLFNBQVNzRCxJQUNSbkgsRUFBRVIsU0FBVzJILElBQ2ZBLEVBQUd4RCxVQUFVN0UsT0FBTyxZQUNwQnFJLEVBQUd4RCxVQUFVSSxJQUFJLGNBQ25CLElBRUosR0FDQSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL3NyYy9zdHlsZS9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvLi9zcmMvc3R5bGUvc3R5bGUuY3NzP2M5ZjAiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL3NyYy9jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL3NyYy9ob21lLmpzIiwid2VicGFjazovL2RlZmF1bHQtdGVtcGxhdGUvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL3NyYy9vcmRlci5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlLy4vc3JjL2Zvb3Rlci5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlLy4vc3JjL2hlYWRlci5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0LXRlbXBsYXRlLy4vc3JjL21lbnUuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC10ZW1wbGF0ZS8uL3NyYy9jb250YWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLy4uL2ltZy9iZy5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9zd2FsZCZmYW1pbHk9VW5ib3VuZGVkJmRpc3BsYXk9c3dhcCk7XCJdKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtZmFtaWx5OiAnT3N3YWxkJywgc2Fucy1zZXJpZjtcXG59XFxuXFxuOjpzZWxlY3Rpb24ge1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcbn1cXG5cXG5odG1sLFxcbmJvZHkge1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIik7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwdncgMTQ1dmg7XFxuICAgIC8qIGJhY2tncm91bmQtc2l6ZTogY292ZXI7ICovXFxufVxcblxcbi51cHBlci1jb250ZW50IHtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTJ2aCAxZnI7XFxufVxcblxcbi50YWItY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgICBvcGFjaXR5OiAwLjg7XFxuICAgIHBvc2l0aW9uOiBzdGlja3k7XFxuICAgIHRvcDogMDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLnRhYiB7XFxuICAgIGZsZXg6IDEgMSAwO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGNvbG9yOiBncmV5O1xcbiAgICBmb250LWZhbWlseTogJ09zd2FsZCcsIHNhbnMtc2VyaWY7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xcbn1cXG5cXG4udGFiOmhvdmVyLFxcbi5zZWxlY3RlZCB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBvcGFjaXR5OiAxO1xcbn1cXG5cXG4uaG9tZS1jb250ZW50IHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxuICAgIGdyaWQtYXJlYTogMi8xLzIvMjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgZ2FwOiBjbGFtcCg1MHB4LCAxMHZoLCAxNTBweCk7XFxufVxcblxcbi5ob21lLWhlYWQge1xcbiAgICBmb250LXNpemU6IGNsYW1wKDEuNXJlbSwgMTB2dywgNHJlbSk7XFxuICAgIGZvbnQtZmFtaWx5OiAnVW5ib3VuZGVkJywgY3Vyc2l2ZTtcXG59XFxuXFxuLmhvbWUtc3ViLWhlYWQge1xcbiAgICBmb250LWZhbWlseTogJ1VuYm91bmRlZCcsIGN1cnNpdmU7XFxufVxcblxcbi5tZW51LWNvbnRlbnQge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IDQwcHg7XFxuICAgIHBhZGRpbmc6IDUwcHggbWluKDE1dncsIDI1MHB4KTtcXG59XFxuXFxuW2NsYXNzXj0nbWVudS1pdGVtLSddIHtcXG4gICAgd2lkdGg6IGNsYW1wKDMwMHB4LCA0MCUsIDM1MHB4KTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1mbG93OiBjb2x1bW4tcmV2ZXJzZSBub3dyYXA7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDMwcHg7XFxuICAgIGZvbnQtc2l6ZTogMS4zNXJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbi5tZW51LWNvbnRlbnQgaW1nIHtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgYXNwZWN0LXJhdGlvOiAxIC8gMTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3JkZXI6IDRweCBzb2xpZCB3aGl0ZTtcXG59XFxuXFxuLm1lbnUtY29udGVudCBpbWc6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDYpO1xcbn1cXG5cXG4uY29udGFjdC1jb250ZW50IHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDEuN3JlbTtcXG59XFxuXFxuLmNvbnRhY3QtY29udGVudCBpbWcge1xcbiAgICB3aWR0aDogbWluKDYwJSwgNTUwcHgpO1xcbiAgICBoZWlnaHQ6IGF1dG87XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIGJvcmRlcjogNHB4IHNvbGlkIHdoaXRlO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xcbn1cXG5cXG4uY29udGFjdC1jb250ZW50IGltZzpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNik7XFxufVxcblxcbi5jb250YWN0LWNvbnRhaW5lciBkaXZ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XFxufVxcblxcbi5vcmRlciB7XFxuICAgIG9wYWNpdHk6IDAuODtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBwYWRkaW5nLWJsb2NrOiA1MHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiA1dnc7XFxuICAgIGZvbnQtc2l6ZTogMS4yZW07XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxufVxcblxcbi5vcmRlcjo6c2VsZWN0aW9uIHtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcXG59XFxuXFxuLm9yZGVyIGltZyB7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5vcmRlciBpbWc6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxufVxcblxcbmZvb3RlciB7XFxuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbi5naXRodWItbG9nby1jb250YWluZXI+aW1nIHtcXG4gICAgaGVpZ2h0OiAzNXB4O1xcbiAgICB3aWR0aDogYXV0bztcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmdpdGh1Yi1sb2dvLWNvbnRhaW5lcjpob3Zlcj5pbWcge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpIHNjYWxlKDEuMSk7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uaGVhcnQge1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uaGVhcnQ6aG92ZXIge1xcbiAgICBjb2xvcjogcmdiKDI1MiwgODAsIDgwKTtcXG59XFxuXFxuZm9vdGVyIGEge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG5mb290ZXIgYTp2aXNpdGVkIHtcXG4gICAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG5mb290ZXIgZGl2Om50aC1jaGlsZCgzKSB7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtJQUNJLHNCQUFzQjtJQUN0QixVQUFVO0lBQ1YsU0FBUztJQUNULFlBQVk7SUFDWixpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBOztJQUVJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxtREFBa0M7SUFDbEMsNEJBQTRCO0lBQzVCLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLE1BQU07SUFDTixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsV0FBVztJQUNYLGlDQUFpQztJQUNqQyxvQkFBb0I7QUFDeEI7O0FBRUE7O0lBRUkscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLHVCQUF1QjtJQUN2Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsaUNBQWlDO0FBQ3JDOztBQUVBO0lBQ0ksaUNBQWlDO0FBQ3JDOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLFNBQVM7SUFDVCw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSwrQkFBK0I7SUFDL0IsYUFBYTtJQUNiLGdDQUFnQztJQUNoQyx1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixlQUFlO0lBQ2YsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYix3QkFBd0I7SUFDeEIsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixRQUFRO0lBQ1IsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULGFBQWE7QUFDakI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGdDQUFnQztJQUNoQyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksb0NBQW9DO0lBQ3BDLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGdDQUFnQztJQUNoQyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9zd2FsZCZmYW1pbHk9VW5ib3VuZGVkJmRpc3BsYXk9c3dhcCcpO1xcblxcbioge1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC1mYW1pbHk6ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG46OnNlbGVjdGlvbiB7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxufVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICAgIGhlaWdodDogMTAwdmg7XFxufVxcblxcbiNjb250ZW50IHtcXG4gICAgYmFja2dyb3VuZDogdXJsKFxcXCIuLy4uL2ltZy9iZy5qcGdcXFwiKTtcXG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDB2dyAxNDV2aDtcXG4gICAgLyogYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgKi9cXG59XFxuXFxuLnVwcGVyLWNvbnRlbnQge1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMnZoIDFmcjtcXG59XFxuXFxuLnRhYi1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuICAgIG9wYWNpdHk6IDAuODtcXG4gICAgcG9zaXRpb246IHN0aWNreTtcXG4gICAgdG9wOiAwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4udGFiIHtcXG4gICAgZmxleDogMSAxIDA7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG4gICAgY29sb3I6IGdyZXk7XFxuICAgIGZvbnQtZmFtaWx5OiAnT3N3YWxkJywgc2Fucy1zZXJpZjtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XFxufVxcblxcbi50YWI6aG92ZXIsXFxuLnNlbGVjdGVkIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIG9wYWNpdHk6IDE7XFxufVxcblxcbi5ob21lLWNvbnRlbnQge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXG4gICAgZ3JpZC1hcmVhOiAyLzEvMi8yO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IGNsYW1wKDUwcHgsIDEwdmgsIDE1MHB4KTtcXG59XFxuXFxuLmhvbWUtaGVhZCB7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMS41cmVtLCAxMHZ3LCA0cmVtKTtcXG4gICAgZm9udC1mYW1pbHk6ICdVbmJvdW5kZWQnLCBjdXJzaXZlO1xcbn1cXG5cXG4uaG9tZS1zdWItaGVhZCB7XFxuICAgIGZvbnQtZmFtaWx5OiAnVW5ib3VuZGVkJywgY3Vyc2l2ZTtcXG59XFxuXFxuLm1lbnUtY29udGVudCB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogNDBweDtcXG4gICAgcGFkZGluZzogNTBweCBtaW4oMTV2dywgMjUwcHgpO1xcbn1cXG5cXG5bY2xhc3NePSdtZW51LWl0ZW0tJ10ge1xcbiAgICB3aWR0aDogY2xhbXAoMzAwcHgsIDQwJSwgMzUwcHgpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IGNvbHVtbi1yZXZlcnNlIG5vd3JhcDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMzBweDtcXG4gICAgZm9udC1zaXplOiAxLjM1cmVtO1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLm1lbnUtY29udGVudCBpbWcge1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBhc3BlY3QtcmF0aW86IDEgLyAxO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlcjogNHB4IHNvbGlkIHdoaXRlO1xcbn1cXG5cXG4ubWVudS1jb250ZW50IGltZzpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNik7XFxufVxcblxcbi5jb250YWN0LWNvbnRlbnQge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xcbn1cXG5cXG4uY29udGFjdC1jb250ZW50IGltZyB7XFxuICAgIHdpZHRoOiBtaW4oNjAlLCA1NTBweCk7XFxuICAgIGhlaWdodDogYXV0bztcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgYm9yZGVyOiA0cHggc29saWQgd2hpdGU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XFxufVxcblxcbi5jb250YWN0LWNvbnRlbnQgaW1nOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA2KTtcXG59XFxuXFxuLmNvbnRhY3QtY29udGFpbmVyIGRpdntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcXG59XFxuXFxuLm9yZGVyIHtcXG4gICAgb3BhY2l0eTogMC44O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctYmxvY2s6IDUwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDV2dztcXG4gICAgZm9udC1zaXplOiAxLjJlbTtcXG4gICAgY29sb3I6IGJsYWNrO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuLm9yZGVyOjpzZWxlY3Rpb24ge1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xcbn1cXG5cXG4ub3JkZXIgaW1nIHtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLm9yZGVyIGltZzpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcXG59XFxuXFxuZm9vdGVyIHtcXG4gICAgZm9udC1zaXplOiAxLjJyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTBweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuXFxuLmdpdGh1Yi1sb2dvLWNvbnRhaW5lcj5pbWcge1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICAgIHdpZHRoOiBhdXRvO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZ2l0aHViLWxvZ28tY29udGFpbmVyOmhvdmVyPmltZyB7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZykgc2NhbGUoMS4xKTtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5oZWFydCB7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5oZWFydDpob3ZlciB7XFxuICAgIGNvbG9yOiByZ2IoMjUyLCA4MCwgODApO1xcbn1cXG5cXG5mb290ZXIgYSB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbmZvb3RlciBhOnZpc2l0ZWQge1xcbiAgICBjb2xvcjogd2hpdGU7XFxufVxcblxcbmZvb3RlciBkaXY6bnRoLWNoaWxkKDMpIHtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJmdW5jdGlvbiBjcmVhdGVIdG1sRWxlbWVudChuYW1lLCBjbGFzc0xpc3QsIGF0dHJpYnV0ZXMsIHN0cmluZykge1xuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcbiAgaWYgKGNsYXNzTGlzdCkge1xuICAgIGNsYXNzTGlzdC5mb3JFYWNoKChjbHMpID0+IHtcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbHMpO1xuICAgIH0pO1xuICB9XG4gIGlmIChhdHRyaWJ1dGVzKSB7XG4gICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gICAgfSk7XG4gIH1cbiAgaWYgKHN0cmluZykgZWxlbWVudC50ZXh0Q29udGVudCA9IHN0cmluZztcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVIdG1sRWxlbWVudDtcbiIsImltcG9ydCBjcmVhdGVIdG1sRWxlbWVudCBmcm9tICcuL2NyZWF0ZSc7XG5cbmZ1bmN0aW9uIGxvYWRIb21lQ29udGVudCgpIHtcbiAgY29uc3QgaG9tZUhlYWQgPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICBbJ2hvbWUtaGVhZCddLFxuICAgIG51bGwsXG4gICAgJ1RoZSBXZWRuZXNkYXkgQ2Fmw6knXG4gICk7XG4gIGNvbnN0IGhvbWVTdWJIZWFkID0gY3JlYXRlSHRtbEVsZW1lbnQoXG4gICAgJ2RpdicsXG4gICAgWydob21lLXN1Yi1oZWFkJ10sXG4gICAgbnVsbCxcbiAgICAnV2hlcmUgVGhlIERhcmtuZXNzIEJyZXdzJ1xuICApO1xuICBjb25zdCBkaXYgPSBjcmVhdGVIdG1sRWxlbWVudCgnZGl2JywgWydob21lLWNvbnRlbnQnXSwgbnVsbCwgbnVsbCk7XG4gIGRpdi5hcHBlbmQoaG9tZUhlYWQsIGhvbWVTdWJIZWFkKTtcbiAgcmV0dXJuIGRpdjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbG9hZEhvbWVDb250ZW50O1xuIiwiaW1wb3J0ICcuL3N0eWxlL3N0eWxlLmNzcyc7XG5pbXBvcnQgY3JlYXRlSHRtbEVsZW1lbnQgZnJvbSAnLi9jcmVhdGUnO1xuaW1wb3J0IGxvYWRIZWFkZXIgZnJvbSAnLi9oZWFkZXInO1xuaW1wb3J0IGxvYWRIb21lQ29udGVudCBmcm9tICcuL2hvbWUnO1xuaW1wb3J0IGxvYWRNZW51Q29udGVudCBmcm9tICcuL21lbnUnO1xuaW1wb3J0IGxvYWRDb250YWN0Q29udGVudCBmcm9tICcuL2NvbnRhY3QnO1xuaW1wb3J0IGxvYWRGb290ZXJDb250ZW50IGZyb20gJy4vZm9vdGVyJztcbmltcG9ydCBsb2FkT3JkZXJDb250ZW50IGZyb20gJy4vb3JkZXInO1xuXG5jb25zdCBvcmRlckRpdiA9IGxvYWRPcmRlckNvbnRlbnQoKTtcbmNvbnN0IGZvb3RlciA9IGxvYWRGb290ZXJDb250ZW50KCk7XG5jb25zdCB1cHBlckNvbnRlbnQgPSBjcmVhdGVIdG1sRWxlbWVudCgnZGl2JywgWyd1cHBlci1jb250ZW50J10sIG51bGwsIG51bGwpO1xuY29uc3QgbG93ZXJDb250ZW50ID0gY3JlYXRlSHRtbEVsZW1lbnQoJ2RpdicsIFsnbG93ZXItY29udGVudCddLCBudWxsLCBudWxsKTtcbmNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGVudCcpO1xuXG51cHBlckNvbnRlbnQuYXBwZW5kKGxvYWRIZWFkZXIoKSwgbG9hZEhvbWVDb250ZW50KCkpO1xubG93ZXJDb250ZW50LmFwcGVuZChvcmRlckRpdiwgZm9vdGVyKTtcbmNvbnRlbnQuYXBwZW5kKHVwcGVyQ29udGVudCwgbG93ZXJDb250ZW50KTtcblxuY29uc3QgdGFicyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhYicpKTtcbnRhYnMuZm9yRWFjaCgodGFiKSA9PiB7XG4gIHRhYi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgaWYgKEFycmF5LmZyb20oZS50YXJnZXQuY2xhc3NMaXN0KS5pbmNsdWRlcygndW5zZWxlY3RlZCcpKSB7XG4gICAgICAvLyByZW1vdmUgdGhlIG1haW4gY29udGVudCBvZiBleGlzdGluZyB0YWJcbiAgICAgIHVwcGVyQ29udGVudC5yZW1vdmVDaGlsZCh1cHBlckNvbnRlbnQubGFzdENoaWxkKTtcblxuICAgICAgaWYgKGUudGFyZ2V0LnRleHRDb250ZW50ID09PSAnSE9NRScpIHtcbiAgICAgICAgLy8gYXBwZW5kIG5ldyBjb250ZW50IG9mIG5ldyBzZWxlY3RlZCB0YWJcbiAgICAgICAgdXBwZXJDb250ZW50LmFwcGVuZChsb2FkSG9tZUNvbnRlbnQoKSk7XG4gICAgICAgIGxvd2VyQ29udGVudC5pbnNlcnRCZWZvcmUob3JkZXJEaXYsIGZvb3Rlcik7XG4gICAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LnRleHRDb250ZW50ID09PSAnTUVOVScpIHtcbiAgICAgICAgLy8gYXBwZW5kIG5ldyBjb250ZW50IG9mIG5ldyBzZWxlY3RlZCB0YWJcbiAgICAgICAgdXBwZXJDb250ZW50LmFwcGVuZChsb2FkTWVudUNvbnRlbnQoKSk7XG4gICAgICAgIC8vIGlmIGV4aXN0aW5nIHRhYiBpcyBIT01FLCByZW1vdmUgb3JkZXJEaXZcbiAgICAgICAgaWYgKGxvd2VyQ29udGVudC5jaGlsZHJlbi5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICBsb3dlckNvbnRlbnQucmVtb3ZlQ2hpbGQobG93ZXJDb250ZW50LmZpcnN0Q2hpbGQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBhcHBlbmQgbmV3IGNvbnRlbnQgb2YgbmV3IHNlbGVjdGVkIHRhYlxuICAgICAgICB1cHBlckNvbnRlbnQuYXBwZW5kKGxvYWRDb250YWN0Q29udGVudCgpKTtcbiAgICAgICAgLy8gaWYgZXhpc3RpbmcgdGFiIGlzIEhPTUUsIHJlbW92ZSBvcmRlckRpdlxuICAgICAgICBpZiAobG93ZXJDb250ZW50LmNoaWxkcmVuLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgIGxvd2VyQ29udGVudC5yZW1vdmVDaGlsZChsb3dlckNvbnRlbnQuZmlyc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XG4gICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCd1bnNlbGVjdGVkJyk7XG4gICAgICAvLyBhZGQgdW5zZWxlY3RlZCBjbGFzcyB0byBhbmQgcmVtb3ZlIHNlbGVjdGVkIGNsYXNzIGZyb20gbm9uLWNsaWNrZWQgdGFic1xuICAgICAgdGFicy5mb3JFYWNoKCh0YikgPT4ge1xuICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRiKSB7XG4gICAgICAgICAgdGIuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcbiAgICAgICAgICB0Yi5jbGFzc0xpc3QuYWRkKCd1bnNlbGVjdGVkJyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59KTtcbiIsImltcG9ydCBjcmVhdGVIdG1sRWxlbWVudCBmcm9tICcuL2NyZWF0ZSc7XG5pbXBvcnQgc3dpZ2d5SW1nIGZyb20gJy4vaW1nL3N3aWdneS5wbmcnO1xuaW1wb3J0IHpvbWF0b0ltZyBmcm9tICcuL2ltZy96b21hdG8ucG5nJztcblxuZnVuY3Rpb24gbG9hZE9yZGVyQ29udGVudCgpIHtcbiAgY29uc3Qgb3JkZXJEaXYgPSBjcmVhdGVIdG1sRWxlbWVudCgnZGl2JywgWydvcmRlciddLCBudWxsLCAnT3JkZXIgT25saW5lJyk7XG4gIGNvbnN0IHN3aWdneUljb24gPSBuZXcgSW1hZ2UoKTtcbiAgc3dpZ2d5SWNvbi5zcmMgPSBzd2lnZ3lJbWc7XG5cbiAgY29uc3Qgem9tYXRvSWNvbiA9IG5ldyBJbWFnZSgpO1xuICB6b21hdG9JY29uLnNyYyA9IHpvbWF0b0ltZztcbiAgb3JkZXJEaXYuYXBwZW5kKHN3aWdneUljb24sIHpvbWF0b0ljb24pO1xuICBzd2lnZ3lJY29uLnN0eWxlLmhlaWdodCA9ICc5MHB4JztcbiAgem9tYXRvSWNvbi5zdHlsZS5oZWlnaHQgPSAnOTBweCc7XG4gIHJldHVybiBvcmRlckRpdjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbG9hZE9yZGVyQ29udGVudDtcbiIsImltcG9ydCBjcmVhdGVIdG1sRWxlbWVudCBmcm9tICcuL2NyZWF0ZSc7XG5pbXBvcnQgZ2l0aHViSWNvbiBmcm9tICcuL2ltZy9naXRodWIuc3ZnJztcblxuZnVuY3Rpb24gbG9hZEZvb3RlckNvbnRlbnQoKSB7XG4gIGNvbnN0IGZvb3RlciA9IGNyZWF0ZUh0bWxFbGVtZW50KCdmb290ZXInLCBudWxsLCBudWxsLCBudWxsKTtcblxuICBjb25zdCBnaXRodWJMb2dvID0gbmV3IEltYWdlKCk7XG4gIGdpdGh1YkxvZ28uc3JjID0gZ2l0aHViSWNvbjtcblxuICBjb25zdCBhbmNob3JMb2dvQ29udGFpbmVyID0gY3JlYXRlSHRtbEVsZW1lbnQoXG4gICAgJ2EnLFxuICAgIFsnZ2l0aHViLWxvZ28tY29udGFpbmVyJ10sXG4gICAge1xuICAgICAgaHJlZjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcnBpdHRhbmVqYS9SZXN0YXVyYW50LVBhZ2UnLFxuICAgICAgdGFyZ2V0OiAnX2JsYW5rJyxcbiAgICB9LFxuICAgIG51bGxcbiAgKTtcblxuICBhbmNob3JMb2dvQ29udGFpbmVyLmFwcGVuZChnaXRodWJMb2dvKTtcbiAgY29uc3QgbWlkZGxlRGl2ID0gY3JlYXRlSHRtbEVsZW1lbnQoJ2RpdicsIG51bGwsIG51bGwsIG51bGwpO1xuICBjb25zdCBsb3dlckRpdiA9IGNyZWF0ZUh0bWxFbGVtZW50KFxuICAgICdkaXYnLFxuICAgIG51bGwsXG4gICAgbnVsbCxcbiAgICAnVGhlIFdlZG5lc2RheSBDYWbDqSDCqSAyMDIyIHwgQWxsIFJpZ2h0cyBSZXNlcnZlZCdcbiAgKTtcbiAgY29uc3QgaGVhcnRTcGFuID0gY3JlYXRlSHRtbEVsZW1lbnQoJ3NwYW4nLCBbJ2hlYXJ0J10sIG51bGwsICfimaUnKTtcbiAgY29uc3QgbmFtZVNwYW4gPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICAnYScsXG4gICAgbnVsbCxcbiAgICB7IGhyZWY6ICdodHRwczovL2dpdGh1Yi5jb20vYXJwaXR0YW5lamEnLCB0YXJnZXQ6ICdfYmxhbmsnIH0sXG4gICAgJ0FycGl0IFRhbmVqYSdcbiAgKTtcbiAgbWlkZGxlRGl2LmFwcGVuZCgnTWFkZSB3aXRoICcsIGhlYXJ0U3BhbiwgJyBieSAnLCBuYW1lU3Bhbik7XG4gIGZvb3Rlci5hcHBlbmQoYW5jaG9yTG9nb0NvbnRhaW5lciwgbWlkZGxlRGl2LCBsb3dlckRpdik7XG4gIHJldHVybiBmb290ZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxvYWRGb290ZXJDb250ZW50O1xuIiwiaW1wb3J0IGNyZWF0ZUh0bWxFbGVtZW50IGZyb20gJy4vY3JlYXRlJztcblxuZnVuY3Rpb24gbG9hZEhlYWRlcigpIHtcbiAgY29uc3QgdGFiQ29udGFpbmVyID0gY3JlYXRlSHRtbEVsZW1lbnQoJ2RpdicsIFsndGFiLWNvbnRhaW5lciddLCBudWxsLCBudWxsKTtcbiAgY29uc3QgaG9tZVRhYiA9IGNyZWF0ZUh0bWxFbGVtZW50KCdkaXYnLCBbJ3RhYicsICdzZWxlY3RlZCddLCBudWxsLCAnSE9NRScpO1xuICBjb25zdCBtZW51VGFiID0gY3JlYXRlSHRtbEVsZW1lbnQoJ2RpdicsIFsndGFiJywgJ3Vuc2VsZWN0ZWQnXSwgbnVsbCwgJ01FTlUnKTtcbiAgY29uc3QgY29udGFjdFRhYiA9IGNyZWF0ZUh0bWxFbGVtZW50KFxuICAgICdkaXYnLFxuICAgIFsndGFiJywgJ3Vuc2VsZWN0ZWQnXSxcbiAgICBudWxsLFxuICAgICdDT05UQUNUJ1xuICApO1xuICB0YWJDb250YWluZXIuYXBwZW5kKGhvbWVUYWIsIG1lbnVUYWIsIGNvbnRhY3RUYWIpO1xuICByZXR1cm4gdGFiQ29udGFpbmVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBsb2FkSGVhZGVyO1xuIiwiaW1wb3J0IGNyZWF0ZUh0bWxFbGVtZW50IGZyb20gJy4vY3JlYXRlJztcbmltcG9ydCBzaG90SWNvbiBmcm9tICcuL2ltZy9zaG90LmpwZWcnO1xuaW1wb3J0IHBvdGF0b0ljb24gZnJvbSAnLi9pbWcvbW9uc3Rlcm1hc2guanBnJztcbmltcG9ydCBjb29raWVJY29uIGZyb20gJy4vaW1nL2V5ZWJhbGxjb29raWVzLmpwZyc7XG5pbXBvcnQgc2hha2VJY29uIGZyb20gJy4vaW1nL2RlYXRoc2hha2UuanBnJztcblxuZnVuY3Rpb24gbG9hZE1lbnVDb250ZW50KCkge1xuICBjb25zdCBzaG90ID0gbmV3IEltYWdlKCk7XG4gIGNvbnN0IHBvdGF0byA9IG5ldyBJbWFnZSgpO1xuICBjb25zdCBjb29raWUgPSBuZXcgSW1hZ2UoKTtcbiAgY29uc3Qgc2hha2UgPSBuZXcgSW1hZ2UoKTtcbiAgY29uc3QgbWVudSA9IGNyZWF0ZUh0bWxFbGVtZW50KCdkaXYnLCBbJ21lbnUtY29udGVudCddLCBudWxsLCBudWxsKTtcbiAgY29uc3QgbWVudUl0ZW0xID0gY3JlYXRlSHRtbEVsZW1lbnQoXG4gICAgJ2RpdicsXG4gICAgWydtZW51LWl0ZW0tMSddLFxuICAgIG51bGwsXG4gICAgJ1pvbWJpZSBCcmFpbiBKZWxsbyBTaG90cydcbiAgKTtcbiAgc2hvdC5zcmMgPSBzaG90SWNvbjtcbiAgbWVudUl0ZW0xLmFwcGVuZChzaG90KTtcbiAgY29uc3QgbWVudUl0ZW0yID0gY3JlYXRlSHRtbEVsZW1lbnQoXG4gICAgJ2RpdicsXG4gICAgWydtZW51LWl0ZW0tMiddLFxuICAgIG51bGwsXG4gICAgJ01vbnN0ZXIgTWFzaGVkIFBvdGF0b2VzJ1xuICApO1xuICBwb3RhdG8uc3JjID0gcG90YXRvSWNvbjtcbiAgbWVudUl0ZW0yLmFwcGVuZChwb3RhdG8pO1xuICBjb25zdCBtZW51SXRlbTMgPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICBbJ21lbnUtaXRlbS0zJ10sXG4gICAgbnVsbCxcbiAgICAnRXllYmFsbCBDb29raWVzJ1xuICApO1xuICBjb29raWUuc3JjID0gY29va2llSWNvbjtcbiAgbWVudUl0ZW0zLmFwcGVuZChjb29raWUpO1xuICBjb25zdCBtZW51SXRlbTQgPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICBbJ21lbnUtaXRlbS00J10sXG4gICAgbnVsbCxcbiAgICAnRGVhdGggU2hha2UnXG4gICk7XG4gIHNoYWtlLnNyYyA9IHNoYWtlSWNvbjtcbiAgbWVudUl0ZW00LmFwcGVuZChzaGFrZSk7XG5cbiAgbWVudS5hcHBlbmQobWVudUl0ZW0xLCBtZW51SXRlbTIsIG1lbnVJdGVtMywgbWVudUl0ZW00KTtcbiAgcmV0dXJuIG1lbnU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxvYWRNZW51Q29udGVudDtcbiIsImltcG9ydCBjcmVhdGVIdG1sRWxlbWVudCBmcm9tICcuL2NyZWF0ZSc7XG5pbXBvcnQgbWFwSWNvbiBmcm9tICcuL2ltZy9tYXAucG5nJztcblxuZnVuY3Rpb24gbG9hZENvbnRhY3RDb250ZW50KCkge1xuICBjb25zdCBtYXAgPSBuZXcgSW1hZ2UoKTtcbiAgbWFwLnNyYyA9IG1hcEljb247XG4gIGNvbnN0IGNvbnRhY3REaXYgPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICBbJ2NvbnRhY3QtY29udGFpbmVyJ10sXG4gICAgbnVsbCxcbiAgICAnQ09OVEFDVCBVUydcbiAgKTtcbiAgY29uc3QgY29udGFjdEJvZHkgPSBjcmVhdGVIdG1sRWxlbWVudCgnZGl2JywgWydjb250YWN0LWJvZHknXSwgbnVsbCwgbnVsbCk7XG4gIGNvbnN0IGVtYWlsU3BhbiA9IGNyZWF0ZUh0bWxFbGVtZW50KFxuICAgICdzcGFuJyxcbiAgICBudWxsLFxuICAgIG51bGwsXG4gICAgJ3RoZXdlZG5lc2RheWNhZmVAZ21haWwuY29tJ1xuICApO1xuICBjb25zdCBudW1iZXJTcGFuID0gY3JlYXRlSHRtbEVsZW1lbnQoJ3NwYW4nLCBudWxsLCBudWxsLCAnKzkxIDk4NzY1NDMyMTAnKTtcblxuICBjb250YWN0Qm9keS5hcHBlbmQoZW1haWxTcGFuLCBudW1iZXJTcGFuKTtcbiAgY29udGFjdERpdi5hcHBlbmQoY29udGFjdEJvZHkpO1xuICBjb25zdCBhZGRyZXNzRGl2ID0gY3JlYXRlSHRtbEVsZW1lbnQoJ2RpdicsIFsnYWRkcmVzcyddLCBudWxsLCAnQUREUkVTUycpO1xuICBjb25zdCBhZGRyZXNzQm9keSA9IGNyZWF0ZUh0bWxFbGVtZW50KFxuICAgICdkaXYnLFxuICAgIFsnYWRkcmVzcy1ib2R5J10sXG4gICAgbnVsbCxcbiAgICAnNnRoIEF2ZW51ZSwgQ2FsZ2FyeSwgQUIsIENhbmFkYSdcbiAgKTtcbiAgYWRkcmVzc0Rpdi5hcHBlbmQoYWRkcmVzc0JvZHkpO1xuICBjb25zdCBjb250YWN0Q29udGVudCA9IGNyZWF0ZUh0bWxFbGVtZW50KFxuICAgICdkaXYnLFxuICAgIFsnY29udGFjdC1jb250ZW50J10sXG4gICAgbnVsbCxcbiAgICBudWxsXG4gICk7XG4gIGNvbnRhY3RDb250ZW50LmFwcGVuZChhZGRyZXNzRGl2LCBtYXAsIGNvbnRhY3REaXYpO1xuICByZXR1cm4gY29udGFjdENvbnRlbnQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxvYWRDb250YWN0Q29udGVudDtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJuYW1lIiwiY2xhc3NMaXN0Iiwic3RyaW5nIiwiZm9yRWFjaCIsImNscyIsImFkZCIsImtleXMiLCJ0ZXh0Q29udGVudCIsImhvbWVIZWFkIiwiY3JlYXRlIiwiaG9tZVN1YkhlYWQiLCJkaXYiLCJhcHBlbmQiLCJvcmRlckRpdiIsInN3aWdneUljb24iLCJJbWFnZSIsInpvbWF0b0ljb24iLCJoZWlnaHQiLCJmb290ZXIiLCJnaXRodWJMb2dvIiwiYW5jaG9yTG9nb0NvbnRhaW5lciIsIm1pZGRsZURpdiIsImxvd2VyRGl2IiwiaGVhcnRTcGFuIiwibmFtZVNwYW4iLCJ1cHBlckNvbnRlbnQiLCJsb3dlckNvbnRlbnQiLCJ0YWJDb250YWluZXIiLCJob21lVGFiIiwibWVudVRhYiIsImNvbnRhY3RUYWIiLCJ0YWJzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsInRhYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbmNsdWRlcyIsImxhc3RDaGlsZCIsImluc2VydEJlZm9yZSIsInNob3QiLCJwb3RhdG8iLCJjb29raWUiLCJzaGFrZSIsIm1lbnUiLCJtZW51SXRlbTEiLCJtZW51SXRlbTIiLCJtZW51SXRlbTMiLCJtZW51SXRlbTQiLCJjaGlsZHJlbiIsImNvbnRhY3REaXYiLCJjb250YWN0Qm9keSIsImVtYWlsU3BhbiIsIm51bWJlclNwYW4iLCJhZGRyZXNzRGl2IiwiYWRkcmVzc0JvZHkiLCJjb250YWN0Q29udGVudCIsInRiIl0sInNvdXJjZVJvb3QiOiIifQ==